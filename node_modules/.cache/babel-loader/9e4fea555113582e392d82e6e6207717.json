{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\nconst initState = {\n  value: 0\n};\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initState,\n  reducers: {\n    increase: (state, action) => {\n      state.value += 1;\n    },\n    decrease: (state, action) => {\n      state.value -= 1;\n    }\n  }\n}); // const counterReducer = (state = initState, action) => {\n//   if (action.type === \"increase\") {\n//     return { ...state, value: state.value + action.payload };\n//   }\n//   if (action.type === \"decrease\") {\n//     return { ...state, value: state.value - action.payload };\n//   }\n//   return state;\n// };\n\nconst stor = createStore(counterSlice.reducer);\nexport default stor;","map":{"version":3,"sources":["/media/john/New Volume/WEB Devlopment/Projects/#react.js/redux-app/src/stor/index.js"],"names":["createSlice","createStore","initState","value","counterSlice","name","initialState","reducers","increase","state","action","decrease","stor","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,WAAT,QAA4B,OAA5B;AAEA,MAAMC,SAAS,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAAlB;AAEA,MAAMC,YAAY,GAAGJ,WAAW,CAAC;AAC/BK,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEJ,SAFiB;AAG/BK,EAAAA,QAAQ,EAAE;AACRC,IAAAA,QAAQ,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACN,KAAN,IAAe,CAAf;AACD,KAHO;AAIRQ,IAAAA,QAAQ,EAAE,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC3BD,MAAAA,KAAK,CAACN,KAAN,IAAe,CAAf;AACD;AANO;AAHqB,CAAD,CAAhC,C,CAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMS,IAAI,GAAGX,WAAW,CAACG,YAAY,CAACS,OAAd,CAAxB;AAEA,eAAeD,IAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport { createStore } from \"redux\";\n\nconst initState = { value: 0 };\n\nconst counterSlice = createSlice({\n  name: \"counter\",\n  initialState: initState,\n  reducers: {\n    increase: (state, action) => {\n      state.value += 1;\n    },\n    decrease: (state, action) => {\n      state.value -= 1;\n    },\n  },\n});\n\n// const counterReducer = (state = initState, action) => {\n//   if (action.type === \"increase\") {\n//     return { ...state, value: state.value + action.payload };\n//   }\n//   if (action.type === \"decrease\") {\n//     return { ...state, value: state.value - action.payload };\n//   }\n//   return state;\n// };\n\nconst stor = createStore(counterSlice.reducer);\n\nexport default stor;\n"]},"metadata":{},"sourceType":"module"}